vector<long long> printFirstNegativeInteger(long long int A[], long long int N, long long int K) {
        vector<long long> answer;
        
        deque<int>dq;
        
        for(int i=0; i<K; i++)
        {
            if(A[i]<0)
            {
                dq.push_back(i);
            }
        }
        
        for(int i=K; i<N; i++)
        {
            // Prev Window Answer..
            if(dq.empty()) answer.push_back(0);
            else answer.push_back(A[dq.front()]);
            
            // Removal from front if Possible
            while(!dq.empty() && i-dq.front()>=K)
            {
                dq.pop_front();
            }
            
            // Adding if possible
            if(A[i]<0) dq.push_back(i);
        }
        
        if(dq.empty()) answer.push_back(0);
        else answer.push_back(A[dq.front()]);
        
        return answer;
        
 }
