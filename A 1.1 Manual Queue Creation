// Manual Queue Creation..

#include <iostream>
using namespace std;

class Queue{
  public:
  int front;
  int rear;
  int size;
  int *arr;

  Queue(int n)
  {
    front = 0;
    rear = 0;
    size = n;
    arr = new int[n];
  }

  void push(int data)
  {
    if(rear == size){
      cout<<"Queue is Full...";
    }
    arr[rear] = data;
    rear = rear+1;
  }

  void pop()
  {
    if(front == rear)
    {
      cout<<"Empty Queue";
    }

    arr[front] = -1;
    front = front+1;
    if(front == rear)
    {
      front = 0;
      rear = 0;
    }
  }

  int gfront()
  {
    if(front == rear){
      cout<<"Empty Queue";
      return -1;
    } 

    return arr[front];
  }

  bool isEmpty()
  {
    if(front == rear) return true;
    return false;
  }

  int getSize()
  {
    return rear-front;
  }
};

int main() {
  Queue q(8);

  q.push(10);
  q.push(20);
  q.push(30);
  q.push(40);
  q.push(50);
  q.push(60);

  cout<<q.getSize();
  cout<<endl<<q.gfront();
  q.pop();
  cout<<endl<<q.gfront();
  cout<<endl<<q.isEmpty();
  cout<<endl<<q.getSize()<<endl;
  q.push(80);
  cout<<endl<<q.getSize();
  return 0;
}
